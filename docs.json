{
	"name": "LayoutManager",
	"version": "1.0",
	"author": "Christophe Calmejane",
	"homepage": "https://github.com/christophe-calmejane/LayoutManager.spoon",
	"license": "MIT",
	"download_url": "https://github.com/christophe-calmejane/LayoutManager.spoon/releases/latest/download/LayoutManager.spoon.zip",
	"description": "A window layout manager for Hammerspoon with GUI interface and menubar quick access",
	"doc": "# LayoutManager\n\nA comprehensive window layout manager for Hammerspoon that provides:\n- GUI interface for managing window layouts\n- Menubar integration for quick layout access\n- Keyboard shortcuts for layouts\n- Window position snapshotting and restoration\n\n## Installation\n\n1. Download LayoutManager.spoon.zip\n2. Unzip and double-click LayoutManager.spoon to install\n3. Add to your ~/.hammerspoon/init.lua:\n   ```lua\n   local layoutManager = hs.loadSpoon(\"LayoutManager\")\n   layoutManager:init()\n   ```\n4. Reload Hammerspoon configuration\n\n## Usage\n\n- Press Cmd+Alt+Ctrl+L to open the Layout Manager GUI\n- Click the üìê menubar icon for quick access\n- Create new layouts by taking snapshots of current window positions\n- Assign optional keyboard shortcuts to layouts\n- Apply, update, or remove layouts through the GUI or menubar\n\n## Features\n\n- **GUI Interface**: Clean table-based interface for layout management\n- **Menubar Integration**: Quick access to apply layouts without opening GUI\n- **Keyboard Shortcuts**: Assign custom shortcuts to layouts\n- **Window Snapshotting**: Capture current window positions and sizes\n- **Multi-screen Support**: Works with multiple monitors\n- **Persistent Storage**: Layouts saved to layouts.lua file\n- **Context Menu Protection**: Prevents accidental page reloads\n\n## API\n\n### LayoutManager:init()\nInitializes the spoon, loads existing layouts, and sets up the menubar.\n\n### LayoutManager:showLayoutManagerUI()\nOpens the main GUI interface for managing layouts.\n\n### LayoutManager:createNewLayout(name, mods, key)\nCreates a new layout with current window positions.\n- `name`: Layout name\n- `mods`: Optional modifier keys array (e.g., {\"cmd\", \"alt\", \"ctrl\"})\n- `key`: Optional key for shortcut\n\n### LayoutManager:applyLayout(layoutDef)\nApplies a layout to restore window positions.\n\n### LayoutManager:removeLayout(layoutName)\nRemoves a layout after confirmation.\n\n### LayoutManager:updateLayout(layoutName)\nUpdates an existing layout with current window positions."
}